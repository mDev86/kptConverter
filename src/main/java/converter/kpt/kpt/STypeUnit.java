//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1-b171012.0423 
//         See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
//         Any modifications to this file will be lost upon recompilation of the source schema. 
//         Generated on: 2019.02.22 at 11:45:16 AM YEKT 
//


package converter.kpt.kpt;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for sType_Unit.
 * 
 * <p>The following schema fragment specifies the expected         content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="sType_Unit"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Точка"/&gt;
 *     &lt;enumeration value="Линия"/&gt;
 *     &lt;enumeration value="Дуга"/&gt;
 *     &lt;enumeration value="Прямоугольник"/&gt;
 *     &lt;enumeration value="Окружность"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "sType_Unit", namespace = "urn://x-artefacts-rosreestr-ru/commons/simple-types/1.0")
@XmlEnum
public enum STypeUnit {

    @XmlEnumValue("\u0422\u043e\u0447\u043a\u0430")
    ТОЧКА("\u0422\u043e\u0447\u043a\u0430"),
    @XmlEnumValue("\u041b\u0438\u043d\u0438\u044f")
    ЛИНИЯ("\u041b\u0438\u043d\u0438\u044f"),
    @XmlEnumValue("\u0414\u0443\u0433\u0430")
    ДУГА("\u0414\u0443\u0433\u0430"),
    @XmlEnumValue("\u041f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a")
    ПРЯМОУГОЛЬНИК("\u041f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a"),
    @XmlEnumValue("\u041e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u044c")
    ОКРУЖНОСТЬ("\u041e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u044c");
    private final String value;

    STypeUnit(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static STypeUnit fromValue(String v) {
        for (STypeUnit c: STypeUnit.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
